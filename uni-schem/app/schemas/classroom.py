from typing import Optional
from pydantic import BaseModel, constr


class ClassroomBase(BaseModel):
    """
    Shared attributes for classroom models.

    Attributes:
        name (str): Name or number of the classroom (max 50 characters).
        capacity (int): Maximum number of students the classroom can hold.
        location (Optional[str]): Building or location info (up to 100 chars).
    """
    name: constr(max_length=50)
    capacity: int
    location: Optional[constr(max_length=100)] = None


class ClassroomCreate(ClassroomBase):
    """
    Schema for creating a new classroom. ID is generated by the database.

    Inherits:
        name, capacity, location from ClassroomBase.
    """
    pass


class ClassroomUpdate(BaseModel):
    """
    Schema for updating a classroom. All fields optional.
    """
    name: Optional[constr(max_length=50)] = None
    capacity: Optional[int] = None
    location: Optional[constr(max_length=100)] = None


class ClassroomOut(ClassroomBase):
    """
    Schema for returning classroom data in API responses.

    Adds:
        classroom_id (int): Unique identifier of the classroom.
    """
    classroom_id: int

    class Config:
        orm_mode = True
